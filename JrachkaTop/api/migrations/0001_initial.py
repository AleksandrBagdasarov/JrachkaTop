# Generated by Django 4.1.5 on 2023-01-04 20:41

import api.models.printer
import api.models.user
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=100, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "user",
                "db_table": "user",
            },
            managers=[
                ("objects", api.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Printer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("point_id", models.IntegerField(auto_created=True)),
                (
                    "name",
                    models.CharField(
                        default=api.models.printer.get_unique_name,
                        max_length=64,
                        unique=True,
                    ),
                ),
                ("api_key", models.CharField(max_length=255)),
                (
                    "check_type",
                    models.CharField(
                        choices=[("kitchen", "kitchen"), ("client", "client")],
                        max_length=32,
                    ),
                ),
            ],
            options={
                "verbose_name": "printer",
                "verbose_name_plural": "printer",
                "db_table": "printer",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("point_id", models.IntegerField()),
                ("items", models.JSONField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "order",
                "verbose_name_plural": "order",
                "db_table": "order",
            },
        ),
        migrations.CreateModel(
            name="Check",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("kitchen", "client")], max_length=32
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "new"),
                            ("rendered", "rendered"),
                            ("printed", "printed"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.order",
                    ),
                ),
                (
                    "printer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.printer",
                    ),
                ),
            ],
            options={
                "verbose_name": "check",
                "verbose_name_plural": "check",
                "db_table": "check",
            },
        ),
        migrations.AddIndex(
            model_name="check",
            index=models.Index(fields=["type"], name="check_type_ac3999_idx"),
        ),
        migrations.AddIndex(
            model_name="check",
            index=models.Index(
                fields=["status"], name="check_status_664fc4_idx"
            ),
        ),
    ]
